/*
16/10/2023

flag: variabili booleane (vero-falso), servono per tenere traccia di uno stato/azione etc

massimo tra numeri inseriti, ma solo tra quelli pari:
(primo numero inserito: lunghezza della sequenza)

leggi la lunghezza della sequenza;
inizializza il contatore a zero;

while ( i < n )
{
  leggi il numero corrente;
  incrementa il contatore;
  elabora il numero corrente;
}
stampa il risultato;
*/


input n;
i <- 0;
flag_pari FALSO;
flag_max_inizializzato FALSO;

while ( i < n )
{
  input numero_corrente;
  i <- i+1;
  if( numero è pari ) // %(numero_corrente/2) == 0
  {
    if( flag_max_inizializzato VERO )
    {
      if( numero_corrente > max )
      {
        max <- numero_corrente;
      }
    }
    else
    {
      max <- numero_corrente;
      flag_max_inizializzato VERO;
    }
  }
}
if( flag_max_inizializzato VERO )
{
  output max;
}
else
{
  output "non ci sono numeri pari";
}

/*
si usa un software per scrivere codice

Conosciute le SPECIFICHE DEL PROBLEMA lo ANALIZZIAMO e lo traduciamo in un ALGORITMO (-> eseguibilità, non-ambiguità, finitezza)
che viene IMPLEMENTATO e diventa PROGRAMMA SORGENTE.
Questo viene COMPILATO e avviene il LINKING che lo trasforma in PROGRAMMA ESEGUIBILE.
Viene ESEGUITO e il RISULTATI VENGONO CONTROLLATI.
Se ci sono problemi si effettua il DEBUGGING DEL PROGRAMMA SORGENTE.
Naturalmente l'algoritmo deve essere giusto e controllato precedentemente. quindi quello non deve essere fonte di problemi.
Si scrive il programma DOPO che si è certi che l'algoritmo funzioni correttamente.
Si deve MODIFICARE SOLO IL PROGRAMMA.

ANALISI:
si usano sistemi di analisi automatica e strumenti CASE (Computer Aided Software Engeneering)

TEXT EDITOR:
programma per scrivere file di testo (ASCII)

COMPILATORE C/C++ della GNU:
C:\ PROGR> gcc -o foobar.exe foobar.c (C: cosa scrivere sul compilatore per far partire il programma e generare un file eseguibile .exe partendo da un file di testo .c)
g++ -o foobar.exe foobar.cpp (C++: "")
(traduzione del programma sorgente da linguaggio ad alto livello a linguaggio macchina -> file oggetto)

(il LINKER collega al programma le istruzioni usate dalle funzioni attraverso le librerie -> fle eseguibile)
(l'INTERPRETE legge e traduce il programma sorgente riga per riga. il compilatore genera un file eseguibile, l'interprete ritraduce ogni volta il file sorgente. utilizzato per i sistemi operativi)

ESECUZIONE:
- in MS-DOS (txt editor) è sufficiente scrivere il nome del file sulla linea di comando e premere invio:
C: PROGRAMMI> foobar
- in Unix (txt editor) bisogna indicare il direttorio corrente:
$ ./foobar.exe

DEBUGGING:
- analisi del codice
- selezione dei casi significativi
- printf

DEBUGGING AVANZATO:
- debugger
*/

/*
IMPLEMENTARE significa tradurre le operazioni destritte dall'algoritmo in procwdure eseguibili 
dal calcolatore.

LINGUAGGIO C
un programma C è costituito da:
- Variabili: memorizzano dati;
- Funzioni: sono sequenze di istruzioni da operare sui dati.

//librerie standard
#include <stdio.h>
#include <stdlib.h>

/*programma costituito da una funzione principale main, in caso accompagnata da altre funzioni*/
int main() //intestazione
//blocco di codice racchiuso tra {}
{
  printf ("Hello world!\n"); // print: stampa f:formattata, posso scegliere il formato dei dati
  return EXIT_SUCCESS;
}

*/