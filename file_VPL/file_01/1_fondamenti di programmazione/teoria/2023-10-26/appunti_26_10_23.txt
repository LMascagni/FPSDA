/*
scritto sul terminale del compilatore:
gcc -Wall -o minimo_con_errori.exe minimo_con_errori.c

-Wall e -o  sono dei flag, comandi per il compilatore
Wall: warning all-> visualizza tutti i warning (non solo gli errori)
o: open file

ctrl+c : blocca il programma se entra in loop

#ifdef DEBUG (DEBUG è un valore definito precedentemente)
...
#endif
- usati per "commentare" porzioni di codice se precedentemente ho dato a un valore alla variabile DEBUG (nome arbitrario) 
sono usati insieme alle printf di test

%x : stampa numero in esadecimale
CAST: modifica il tipo di variabile -> (tipo) nome_variabile

%c: stampa il simbolo grafico, non il codice ascii
NOTA: il programmino ora non funziona. il while ( n > 0) non funziona perchè il buffer elimina il - di -1 con cui si deve finire la seguenza per uscire dal ciclo (?)
   char ch;
   int n;
   do{
   printf("inserisci il codice: ");
   ch = getchar();
   printf("ho letto il codice %c (codice ascii %d)\n", ch, (int) ch);

   printf("inserisci il numero: ");
   scanf("%d", &n);
   while(getchar() != '\n'); //svuoto il buffer
   printf("ho letto il numero %d\n", n);
   } while(n>0);

while(getchar() != '\n'); :svuoto il buffer
*/